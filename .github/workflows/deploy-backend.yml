name: Build, Push, Deploy Cachee API

on:
    push:
        branches:
            - main
        paths:
            - "backend/**"

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - uses: actions/checkout@v4

            - name: Debug VPS_HOST
              run: echo "${{ secrets.VPS_HOST }}" && echo "${{ secrets.VPS_SSH_KEY }}"

            # - name: Log in to GHCR
            #   uses: docker/login-action@v3
            #   with:
            #       registry: ghcr.io
            #       username: ${{ github.actor }}
            #       password: ${{ secrets.GITHUB_TOKEN }}

            # - name: Build and push
            #   uses: docker/build-push-action@v5
            #   with:
            #       context: ./backend
            #       push: true
            #       tags: ghcr.io/${{ github.repository }}/backend:latest

            # - name: Deploy on VPS
            #   uses: appleboy/ssh-action@v1.1.0
            #   with:
            #       host: ${{ secrets.VPS_HOST }}
            #       username: ${{ secrets.VPS_USER }}
            #       key: ${{ secrets.VPS_SSH_KEY }}
            #       script: |
            #           export DATABASE_URL=${{ secrets.ENV_DATABASE_URL }}
            #           export JWT_KEY=${{ secrets.ENV_JWT_KEY }}
            #           export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            #           export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            #           export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            #           export API_PORT=${{ vars.API_PORT }}
            #           export NODE_ENV=${{ vars.NODE_ENV }}
            #           export API_CONTAINER_NAME=${{ vars.API_CONTAINER_NAME }}
            #           export GITHUB_REPO=${{ github.repository }}
            #           export DOCKER_NETWORK_NAME=${{ vars.DOCKER_NETWORK_NAME }}

            #           docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.VPS_GHCR_PAT }}

            #           docker compose -f /production/docker-compose.yml pull
            #           docker compose -f /production/docker-compose.yml config
            #           docker compose -f /production/docker-compose.yml up -d
