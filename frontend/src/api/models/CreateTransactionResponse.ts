/* tslint:disable */
/* eslint-disable */
/**
 * Income Calculator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateTransactionResponse
 */
export interface CreateTransactionResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof CreateTransactionResponse
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateTransactionResponse
     */
    isExpense?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CreateTransactionResponse
     */
    amountInPence?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreateTransactionResponse
     */
    isRecurring?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof CreateTransactionResponse
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreateTransactionResponse
     */
    finishDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    recurrenceType?: CreateTransactionResponseRecurrenceTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateTransactionResponse
     */
    recurrenceRate?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    recurrenceRateType?: CreateTransactionResponseRecurrenceRateTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateTransactionResponse
     */
    specificDayOfWeek?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateTransactionResponse
     */
    specificDayOfMonth?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateTransactionResponse
     */
    firstLastDayOfMonth?: CreateTransactionResponseFirstLastDayOfMonthEnum;
}


/**
 * @export
 */
export const CreateTransactionResponseRecurrenceTypeEnum = {
    Day: 'day',
    Week: 'week',
    Month: 'month',
    Year: 'year'
} as const;
export type CreateTransactionResponseRecurrenceTypeEnum = typeof CreateTransactionResponseRecurrenceTypeEnum[keyof typeof CreateTransactionResponseRecurrenceTypeEnum];

/**
 * @export
 */
export const CreateTransactionResponseRecurrenceRateTypeEnum = {
    SpecificDayOfWeek: 'specific_day_of_week',
    SpecificDayOfMonth: 'specific_day_of_month',
    FirstLastDayOfMonth: 'first_last_day_of_month'
} as const;
export type CreateTransactionResponseRecurrenceRateTypeEnum = typeof CreateTransactionResponseRecurrenceRateTypeEnum[keyof typeof CreateTransactionResponseRecurrenceRateTypeEnum];

/**
 * @export
 */
export const CreateTransactionResponseFirstLastDayOfMonthEnum = {
    FirstBusiness: 'first_business',
    LastBusiness: 'last_business',
    Last: 'last'
} as const;
export type CreateTransactionResponseFirstLastDayOfMonthEnum = typeof CreateTransactionResponseFirstLastDayOfMonthEnum[keyof typeof CreateTransactionResponseFirstLastDayOfMonthEnum];


/**
 * Check if a given object implements the CreateTransactionResponse interface.
 */
export function instanceOfCreateTransactionResponse(value: object): value is CreateTransactionResponse {
    return true;
}

export function CreateTransactionResponseFromJSON(json: any): CreateTransactionResponse {
    return CreateTransactionResponseFromJSONTyped(json, false);
}

export function CreateTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'name': json['name'] == null ? undefined : json['name'],
        'isExpense': json['isExpense'] == null ? undefined : json['isExpense'],
        'amountInPence': json['amountInPence'] == null ? undefined : json['amountInPence'],
        'isRecurring': json['isRecurring'] == null ? undefined : json['isRecurring'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'finishDate': json['finishDate'] == null ? undefined : (new Date(json['finishDate'])),
        'recurrenceType': json['recurrenceType'] == null ? undefined : json['recurrenceType'],
        'recurrenceRate': json['recurrenceRate'] == null ? undefined : json['recurrenceRate'],
        'recurrenceRateType': json['recurrenceRateType'] == null ? undefined : json['recurrenceRateType'],
        'specificDayOfWeek': json['specificDayOfWeek'] == null ? undefined : json['specificDayOfWeek'],
        'specificDayOfMonth': json['specificDayOfMonth'] == null ? undefined : json['specificDayOfMonth'],
        'firstLastDayOfMonth': json['firstLastDayOfMonth'] == null ? undefined : json['firstLastDayOfMonth'],
    };
}

export function CreateTransactionResponseToJSON(value?: CreateTransactionResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'userId': value['userId'],
        'name': value['name'],
        'isExpense': value['isExpense'],
        'amountInPence': value['amountInPence'],
        'isRecurring': value['isRecurring'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'finishDate': value['finishDate'] == null ? undefined : ((value['finishDate']).toISOString()),
        'recurrenceType': value['recurrenceType'],
        'recurrenceRate': value['recurrenceRate'],
        'recurrenceRateType': value['recurrenceRateType'],
        'specificDayOfWeek': value['specificDayOfWeek'],
        'specificDayOfMonth': value['specificDayOfMonth'],
        'firstLastDayOfMonth': value['firstLastDayOfMonth'],
    };
}

